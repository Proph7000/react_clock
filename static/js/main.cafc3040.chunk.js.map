{"version":3,"sources":["component/clock.tsx","App.tsx","index.tsx"],"names":["getToday","Date","toUTCString","slice","extractNumberFromClockName","clockName","number","i","length","includes","Clock","state","today","timerIdToday","this","window","setInterval","setState","console","info","prevProps","prevNameClockNumber","name","newNameClockNumber","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerIdClockName","handleClick","handleContextmenu","event","preventDefault","document","addEventListener","removeEventListener","clockDate","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,IACP,OAAQ,IAAIC,MAAQC,cAAcC,OAAO,IAAK,GAGhD,SAASC,EAA2BC,GAGlC,IAFA,IAAIC,EAAS,GAEJC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,GAAK,EACzC,GAAI,aAAaE,SAASJ,EAAUE,IAClCD,GAAUD,EAAUE,QACf,GAAID,EAAOE,OAAS,EACzB,MAIJ,OAA0B,IAAlBF,EAAOE,OAAgB,MAAQF,EAGlC,IAAMI,EAAb,4MACEC,MAAyB,CACvBC,MAAOZ,KAFX,EAKEa,aAAe,EALjB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEL,MAAOZ,MAEvBkB,QAAQC,KAAK,EAAKR,MAAMC,SACvB,OAZP,gCAeE,SAAmBQ,GACjB,IAAMC,EAAsBjB,EAA2BgB,EAAUE,MAC3DC,EAAqBnB,EAA2BU,KAAKU,MAAMF,MAErC,OAAxBD,GAAuD,OAAvBE,KACRA,EAAqBF,EAC3C,IAAQA,EAAsBE,EAC9BA,EAAqBF,GAEF,GAErBH,QAAQO,MACN,uBAAgBL,EAAUE,MAA1B,cACWR,KAAKU,MAAMF,UA5BhC,kCAkCE,WACEP,OAAOW,cAAcZ,KAAKD,gBAnC9B,oBAsCE,WACE,IAAQD,EAAUE,KAAKH,MAAfC,MACAU,EAASR,KAAKU,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACIL,IAGH,YAED,sBAAMK,UAAU,cAAhB,SACIf,WAnDZ,GAA2BgB,aCnB3B,SAASC,IACP,IAAMC,EAAQ7B,KAAK8B,MAAMC,WAAW7B,OAAO,GAE3C,MAAM,SAAN,OAAgB2B,GAGX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACV7B,UAAW,WAHf,EAME8B,iBAAmB,EANrB,EA4BEC,YAAc,WACZ,EAAKnB,SAAS,CAAEiB,UAAU,KA7B9B,EAgCEG,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEiB,UAAU,KAnC9B,uDAQE,WAA2B,IAAD,OACxBpB,KAAKqB,iBAAmBpB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEZ,UAAWwB,QAC1B,MAEHW,SAASC,iBAAiB,SAAS,WACjC,EAAKL,iBAGPI,SAASC,iBAAiB,eAAe,SAACH,GACxC,EAAKD,kBAAkBC,QAlB7B,kCAsBE,WACEE,SAASE,oBAAoB,QAAS5B,KAAKsB,aAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,mBACjDtB,OAAOW,cAAcZ,KAAKqB,oBAzB9B,oBAsCE,WACE,MAA2CrB,KAAKH,MAAxCuB,EAAR,EAAQA,SAAqBS,EAA7B,EAAkBtC,UAElB,OACE,sBAAKsB,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOZ,KAAMqB,WA7ClC,GAAyBf,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.cafc3040.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nfunction getToday(): string {\n  return (new Date()).toUTCString().slice(-12, -4);\n}\n\nfunction extractNumberFromClockName(clockName: string): number | null {\n  let number = '';\n\n  for (let i = 0; i < clockName.length; i += 1) {\n    if ('0123456789'.includes(clockName[i])) {\n      number += clockName[i];\n    } else if (number.length > 0) {\n      break;\n    }\n  }\n\n  return (number.length === 0) ? null : +number;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: getToday(),\n  };\n\n  timerIdToday = 0;\n\n  componentDidMount(): void {\n    this.timerIdToday = window.setInterval(() => {\n      this.setState({ today: getToday() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const prevNameClockNumber = extractNumberFromClockName(prevProps.name);\n    const newNameClockNumber = extractNumberFromClockName(this.props.name);\n\n    if (prevNameClockNumber !== null && newNameClockNumber !== null) {\n      const timeBetweenCalls = (newNameClockNumber < prevNameClockNumber)\n        ? 10000 - prevNameClockNumber + newNameClockNumber\n        : newNameClockNumber - prevNameClockNumber;\n\n      if (timeBetweenCalls > 0) {\n        // eslint-disable-next-line no-console\n        console.debug(\n          `Renamed from ${prevProps.name}`\n            + ` to ${this.props.name}`,\n        );\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdToday);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          { name }\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { today }\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './component/clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdClockName = 0;\n\n  componentDidMount(): void {\n    this.timerIdClockName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', (): void => {\n      this.handleClick();\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent): void => {\n      this.handleContextmenu(event);\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    window.clearInterval(this.timerIdClockName);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName: clockDate } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockDate} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}