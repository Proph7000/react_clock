{"version":3,"sources":["component/clock.tsx","App.tsx","index.tsx"],"names":["getToday","Date","toUTCString","slice","getRandomName","date","value","toString","Clock","state","today","timerIdClockName","timerIdToday","this","window","setInterval","setState","console","info","prevProps","props","debug","clearInterval","className","Component","App","hasClock","clockDate","timerIdClockDate","handleClick","handleContextmenu","event","preventDefault","now","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,IACP,OAAQ,IAAIC,MAAQC,cAAcC,OAAO,IAAK,GAGhD,SAASC,EAAcC,GACrB,IAAMC,EAAQD,EAAKE,WAAWJ,OAAO,GAErC,MAAM,SAAN,OAAgBG,GAGX,IAAME,EAAb,4MACEC,MAAyB,CACvBC,MAAOV,KAFX,EAKEW,iBAAmB,EALrB,EAOEC,aAAe,EAPjB,uDASE,WAA2B,IAAD,OACxBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,MAAOV,MAEvBiB,QAAQC,KAAK,EAAKT,MAAMC,SACvB,OAdP,gCAiBE,SAAmBS,IACZN,KAAKO,MAAMf,MAAQc,EAAUd,KAAO,MAEvCY,QAAQI,MACN,uBAAgBjB,EAAce,EAAUd,OAAxC,cACWD,EAAcS,KAAKO,MAAMf,UAtB5C,kCA2BE,WACES,OAAOQ,cAAcT,KAAKD,gBA5B9B,oBA+BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAL,EAASQ,KAAKO,MAAdf,KAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACInB,EAAcC,KAGjB,YAED,sBAAMkB,UAAU,cAAhB,SACIb,WA5CZ,GAA2Bc,aCXdC,EAAb,4MACEhB,MAAyB,CACvBiB,UAAU,EACVC,UAAW,GAHf,EAMEC,iBAAmB,EANrB,EA4BEC,YAAc,WACZ,EAAKb,SAAS,CAAEU,UAAU,KA7B9B,EAgCEI,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKhB,SAAS,CAAEU,UAAU,KAnC9B,uDAQE,WAA2B,IAAD,OACxBb,KAAKe,iBAAmBd,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEW,UAAW1B,KAAKgC,UAC/B,MAEHC,SAASC,iBAAiB,SAAS,WACjC,EAAKN,iBAGPK,SAASC,iBAAiB,eAAe,SAACJ,GACxC,EAAKD,kBAAkBC,QAlB7B,kCAsBE,WACEG,SAASE,oBAAoB,QAASvB,KAAKgB,aAC3CK,SAASE,oBAAoB,cAAevB,KAAKiB,mBACjDhB,OAAOQ,cAAcT,KAAKe,oBAzB9B,oBAsCE,WACE,MAAgCf,KAAKJ,MAA7BiB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GAAY,cAAC,EAAD,CAAOrB,KAAMsB,WA7ClC,GAAyBH,aCNzBa,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.ec5f58e3.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: string;\n};\n\ntype Props = {\n  date: number;\n};\n\nfunction getToday(): string {\n  return (new Date()).toUTCString().slice(-12, -4);\n}\n\nfunction getRandomName(date: number): string {\n  const value = date.toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: getToday(),\n  };\n\n  timerIdClockName = 0;\n\n  timerIdToday = 0;\n\n  componentDidMount(): void {\n    this.timerIdToday = window.setInterval(() => {\n      this.setState({ today: getToday() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (+this.props.date - +prevProps.date > 3050) {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${getRandomName(prevProps.date)}`\n          + ` to ${getRandomName(this.props.date)}`,\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdToday);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { date } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          { getRandomName(date) }\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { today }\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './component/clock';\n\ntype State = {\n  hasClock: boolean;\n  clockDate: number;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockDate: 0,\n  };\n\n  timerIdClockDate = 0;\n\n  componentDidMount(): void {\n    this.timerIdClockDate = window.setInterval(() => {\n      this.setState({ clockDate: Date.now() });\n    }, 3300);\n\n    document.addEventListener('click', (): void => {\n      this.handleClick();\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent): void => {\n      this.handleContextmenu(event);\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    window.clearInterval(this.timerIdClockDate);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockDate } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock date={clockDate} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}